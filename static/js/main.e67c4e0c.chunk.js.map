{"version":3,"sources":["components/Post.js","components/Loading.js","components/HomePosts.js","components/OptionsMenu.js","components/NavBar.js","components/Home.js","components/Noti.js","components/UserNotifications.js","components/Notifications.js","components/ProfilePost.js","components/ProfilePosts.js","components/UserInfo.js","components/UserInfoQueries.js","components/Profile.js","components/CreatePost.js","components/UserCard.js","components/SearchUsers.js","components/AllUsers.js","components/Login.js","components/SignUp.js","components/AddMusic.js","App.js","serviceWorker.js","index.js","eagle.svg"],"names":["useStyles","makeStyles","theme","avatar","backgroundColor","red","Post","props","classes","user","date","content","postId","userId","token","localStorage","getItem","SHARE_POST","gql","_templateObject","react_default","a","createElement","Card","className","CardHeader","Avatar","aria-label","title","subheader","CardContent","Typography","variant","color","component","CardActions","disableSpacing","react_apollo_esm","mutation","context","headers","Authorization","concat","postMutation","IconButton","Link","to","fab","onClick","Favorite_default","Loading","lib_default","id","size","spinnerColor","spinnerWidth","visible","React","Component","HomePosts","query","HomePosts_templateObject","_ref","loading","error","data","components_Loading","homeFeedForUser","map","object","components_Post","key","idCreator","createdAt","item","&:hover","SimpleMenu","_React$useState","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","aria-owns","undefined","aria-haspopup","event","currentTarget","Menu_default","Menu_Menu","open","Boolean","onClose","MenuItem","swal","icon","buttons","dangerMode","then","willDelete","value","clear","window","location","reload","assign","root","flexGrow","optionsButton","marginLeft","butns","background","radio","ButtonAppBar","AppBar","position","Toolbar","botns","src","logo","alt","Button","state1","state2","state3","state4","OptionsMenu","Home","NavBar","Grid","container","justify","components_HomePosts","setTimeout","href","Noti","type","post_id","post","substr","UserNotifications","UserNotifications_templateObject","NotificationByUser","components_Noti","follower_name","Notifications","components_UserNotifications","card","width","margin","ProfilePost","ProfilePosts","this","console","log","ProfilePosts_templateObject","profileFeedForUser","components_ProfilePost","UserInfo","email","followers","following","withStyles","UserInfoQueries","userQuery","UserInfoQueries_templateObject","followersQuery","_templateObject2","followingQuery","_templateObject3","loadingOne","userById","_ref2","loadingTwo","_ref3","loadingThree","components_UserInfo","name","last_name","count","Profile","match","params","components_UserInfoQueries","components_ProfilePosts","marginTop","typo","CreatePost","setContent","contenido","CREATE_POST","CreatePost_templateObject","TextField","label","multiline","rowsMax","onChange","defineProperty","target","required","onError","errors","alert","onCompleted","text","button","Fab","disabled","Add_default","pathname","UserCard","isFollowed","otherUser","otherUserId","CREATE_FOLLOW","UserCard_templateObject","DELETE_FOLLOW","UserCard_templateObject2","SearchUsers","SearchUsers_templateObject","userList","otherUsers","components_UserCard","iFollow","lastName","AllUsers","components_SearchUsers","Login","document","body","style","password","values","setValues","CREATE_TOKEN_SESSION","Login_templateObject","handleChange","objectSpread","onKeyPress","getElementById","click","FormLabel","FormControl","textField","placeholder","autoFocus","createNewUserSession","jwt","setItem","SignUp","username","passwordConfirmation","CREATE_USER","SignUp_templateObject","AddMusic","AddMusic_templateObject","components_CreatePost","getMusicList","url","client","ApolloClient","uri","App","react_router_dom","react_router","exact","path","hostname","navigator","serviceWorker","register","registration","scope","catch","err","ReactDOM","render","src_App","ready","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e67c4e0c.chunk.js","sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    backgroundColor: red[500]\n  }\n}))\n\nconst Post = (props) => {   \n  const classes = useStyles()\n  const user = props.user\n  const date = props.date\n  const content = props.content\n  const postId = props.postId\n  const userId = props.userId\n  const token = localStorage.getItem('Authorization');\n\n\n  const SHARE_POST = gql`\n    mutation {\n      createShare(share: {\n        userId: \"${userId}\"\n        postId: \"${postId}\"\n      }){\n        userId\n      }\n    }\n  `;\n\n  return (\n    <Card className=\"postStyle\">\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar} aria-label='Recipe'>\n            {user[0]}\n          </Avatar>\n        }\n        title={user}\n        subheader={date}\n      />\n      <CardContent>\n        <Typography variant='body2' color='textSecondary' component='p'>\n          {content}\n        </Typography>\n      </CardContent>\n\n      <CardActions disableSpacing>\n      <Mutation mutation={SHARE_POST}\n        context={{\n          headers: {\n            Authorization: token ? `Bearer ${token}` : \"\"\n          }\n        }}>\n          {postMutation => <IconButton component={Link} to={`/home`} aria-label='Add to favorites' className={classes.fab} onClick={postMutation}>\n            <FavoriteIcon />\n          </IconButton>}\n        </Mutation>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default Post\n","import Spinner from 'react-spinner-material';\nimport React from 'react';\n\nclass Loading extends React.Component {\n  render() {\n  return (\n      <div>\n      \t<center>\n        \t<Spinner id=\"spinner\" size={50} spinnerColor={\"#333\"} spinnerWidth={2} visible={true} />\n        </ center>\n      </div>\n    );\n  }\n}\n\nexport default Loading","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Post from './Post'\nimport Loading from './Loading'\n\nclass HomePosts extends React.Component {\n  \n  render() {\n    const userId = localStorage.getItem('userID')\n    const token = localStorage.getItem('Authorization')\n    \n    return (\n      <Query\n      context={{\n        headers: {\n          Authorization: token ? `Bearer ${token}` : \"\"\n        }\n      }}\n        query={gql`\n          {\n            homeFeedForUser(id: \"${userId}\"){\n              content\n              id\n              idCreator\n              createdAt\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <Loading />;\n          if (error) return <p>Error :(</p>;\n            return data.homeFeedForUser.map((object) => <Post key={object.id} userId={userId} postId={object.id} user={object.idCreator} date={object.createdAt} content={object.content}/>)\n        }}\n        </Query>\n    )\n  }\n}\n\nexport default HomePosts;\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\nimport swal from '@sweetalert/with-react';\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    color: \"black\",\n    '&:hover': {\n      color: \"orange\"\n    }\n  }\n}))\n\nconst SimpleMenu = (props) => {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  function handleClick (event) {\n    setAnchorEl(event.currentTarget)\n  }\n\n  function handleClose () {\n    setAnchorEl(null)\n  }\n\n  function closeSession(){\n    setAnchorEl(null)\n    swal({\n      title: \"Are you sure you want to close your session?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willDelete) => {\n      if (willDelete) {\n        swal(\"Your session has been closed!\", {\n          icon: \"success\",\n        })\n        .then((value) =>{\n          localStorage.clear()\n          window.location.reload()\n          window.location.assign('/')\n        });\n      } else {\n        swal(\"Your session is still open\", {\n          icon: \"info\",\n        });\n      }\n    });\n\n  }\n  return (\n    <div>\n      <IconButton color='inherit' aria-label='Menu' aria-owns={anchorEl ? 'simple-menu' : undefined}\n        aria-haspopup='true'\n        onClick={handleClick}>\n        <MenuIcon />\n      </IconButton>\n      <Menu id='simple-menu' anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem className={classes.item} onClick={handleClose} component={Link} to={`/profile`}>Profile</MenuItem>\n        <MenuItem className={classes.item} onClick={closeSession}>Logout</MenuItem>\n      </Menu>\n    </div>\n  )\n}\n\nexport default SimpleMenu\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport OptionsMenu from './OptionsMenu'\nimport { Link } from 'react-router-dom'\nimport logo from './../eagle.svg'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  optionsButton: {\n    marginLeft: 'auto',\n    color: \"white\",\n    '&:hover': {\n      color: \"orange\"\n    }\n  },\n  title: {\n    flexGrow: 1\n  },\n  butns: {\n    color: \"white\",\n    '&:hover': {\n      color: \"white\",\n      background: \"gray\",\n      radio: 20,\n    }\n  }\n}))\n\nconst ButtonAppBar = (props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <div className={classes.botns}>\n            <img src={logo} className=\"App-logo-nav\" alt=\"logo\" />\n            <Button className={'navBtns '+props.state1} color='inherit' component={Link} to={`/home`}>Home</Button>\n            <Button className={'navBtns '+props.state2} color='inherit' component={Link} to={`/notifications`}>Notifications</Button>\n            <Button className={'navBtns '+props.state3} color='inherit' component={Link} to={`/post`}>New post</Button>\n            <Button className={'navBtns '+props.state4} color='inherit' component={Link} to={`/users`}>Users</Button>\n          </div>\n          <div className={classes.optionsButton}>\n            <OptionsMenu />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default ButtonAppBar\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport HomePosts from './HomePosts'\nimport NavBar from './NavBar'\nimport Loading from './Loading'\n\nconst Home = (props) => {\n\tconst userId = localStorage.getItem('userID')\n\n\tfunction redireccionar(){\n\t  \twindow.location.href=\"/\";\n\t}\n\n\tif (userId!==null) {\n\t\treturn (\n\t\t    <div>\n\t\t      <NavBar state1=\"navS\" id={userId}/>\n\t\t      <Grid container justify='center'>\n\t\t      \t<HomePosts id={userId}/>\n\t\t      </Grid>\n\t\t    </div>\n\t  \t)\n\t}else{\n\tsetTimeout (redireccionar, 5000);\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Loading />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Home\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    backgroundColor: red[500]\n  }\n}))\n\nconst Noti = (props) => {   \n  const classes = useStyles()\n  const user = props.user\n  const date = props.date\n  const type = props.type\n  const post_id = props.post\n\n  return (\n    <Card className=\"postStyle\">\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar} aria-label='Recipe'>\n            {user[0]}\n          </Avatar>\n        }\n        title={user}\n        subheader={date.substr(0,9)}\n      />\n      <CardContent>\n        <Typography variant='body2' color='textSecondary' component='p'>\n          {type === 'follow' ? \"followed you \": \"shared your post: \" + post_id}\n        </Typography>\n      </CardContent>\n\n    </Card>\n  )\n}\n\nexport default Noti\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Noti from './Noti'\nimport Loading from './Loading'\n\nclass UserNotifications extends React.Component {\n  render() {\n    const userId = localStorage.getItem('userID')\n    const token = localStorage.getItem('Authorization');\n    return (\n      <Query\n        context={{\n          headers: {\n            Authorization: token ? `Bearer ${token}` : \"\"\n          }\n        }}\n        query={gql`\n        {\n            NotificationByUser(user: \"${userId}\"){\n              notificated_user\n              follower\n              date\n              type\n              post_id\n              follower_name\n              content\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <Loading />;\n          if (error) return <p>Error :(</p>;\n            return data.NotificationByUser.map((object) => <Noti user={object.follower_name} date={object.date} type={object.type} post={object.content}/>)\n        }}\n        </Query>\n    )\n  }\n}\nexport default UserNotifications;","import React from 'react'\nimport NavBar from './NavBar'\nimport Grid from '@material-ui/core/Grid'\nimport UserNotifications from './UserNotifications';\n\nclass Notifications extends React.Component {\n  render () {\n    const userId = localStorage.getItem('userID')\n    return (\n      <div>\n        <NavBar state2=\"navS\" id={userId} />\n        <Grid container justify='center'>\n          <UserNotifications id={userId}/>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Notifications\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport red from '@material-ui/core/colors/red'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: 700,\n    margin: 20\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}))\n\nconst ProfilePost = (props) => {  \n  const classes = useStyles()\n  const user = props.user\n  const date = props.date\n  const content = props.content\n  return (\n    <Card className=\"postStyle\">\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar} aria-label='Recipe'>\n            {user[0]}\n          </Avatar>\n        }\n        title={user}\n        subheader={date}\n      />\n      <CardContent>\n        <Typography variant='body2' color='textSecondary' component='p'>\n          {content}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default ProfilePost\n","import React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ProfilePost from './ProfilePost';\nimport Loading from './Loading'\n\nclass ProfilePosts extends React.Component {  \n  render(){\n    const userId = this.props.id\n    const token = localStorage.getItem('Authorization');\n    return(\n      console.log(\"el id de prueba:\"),\n      console.log(userId),\n      <Query \n        context={{\n          headers: {\n            Authorization: token ? `Bearer ${token}` : \"\"\n          }\n        }}\n        query={gql`\n        {\n            profileFeedForUser(id: \"${userId}\"){\n              content\n              id\n              idCreator\n              createdAt\n            }\n          }\n        `}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <Loading />;\n          if (error) return <p>Error :(</p>;\n            return data.profileFeedForUser.map((object) => <ProfilePost key={object.id} user={object.idCreator} date={object.createdAt} content={object.content}/>)\n        }}\n      </Query>\n    )\n  }\n}\nexport default ProfilePosts;","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport red from '@material-ui/core/colors/red'\nimport { withStyles } from '@material-ui/styles'\nimport PropTypes from 'prop-types'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport CardContent from '@material-ui/core/CardContent'\n\nconst styles = theme => ({\n  avatar: {\n    backgroundColor: red[500]\n  }\n})\n\nclass UserInfo extends React.Component {\n  render() {\n    const { classes } = this.props\n    return (\n      <Card className=\"profileStyle\">\n        <CardHeader\n          avatar = {\n            <Avatar className={classes.avatar} aria-label='Recipe'>\n              {this.props.user[0]}\n            </Avatar>\n          }\n          title={this.props.user}\n          subheader={this.props.email}\n        />\n        <CardContent>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            Followers: {this.props.followers}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            Following: {this.props.following}\n          </Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nUserInfo.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(UserInfo)","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport UserInfo from './UserInfo'\n\nconst UserInfoQueries = (props) => {  \n  const userId = props.id\n  const token = localStorage.getItem('Authorization');\n\n  const userQuery = gql`\n    {\n      userById(id: {id: \"${userId}\"}){\n        id\n        name\n        last_name\n        email\n      }\n    }\n  `\n\n  const followersQuery = gql`\n    {\n      followers(userId: \"${userId}\"){\n        count\n      }\n    }\n  `\n\n  const followingQuery= gql`\n    {\n      following(userId: \"${userId}\"){\n        count\n      }\n    }\n  `\n\n  return (\n    <Query \n      context={{\n        headers: {\n          Authorization: token ? `Bearer ${token}` : \"\"\n        }\n      }}\n      query={userQuery}>\n      {({ loading: loadingOne, data: { userById  } }) => (\n        <Query \n          context={{\n            headers: {\n              Authorization: token ? `Bearer ${token}` : \"\"\n            }\n          }}\n          query={followersQuery}>\n          {({ loading: loadingTwo, data: { followers  } }) => (\n            <Query \n              context={{\n                headers: {\n                  Authorization: token ? `Bearer ${token}` : \"\"\n                }\n              }}\n              query={followingQuery}>\n              {({ loading: loadingThree, data: { following }}) => {\n                if (loadingOne || loadingTwo || loadingThree) return <span> </span>\n                return <UserInfo user={userById.name+ \" \"+userById.last_name} \n                                email={userById.email} followers={followers.count}\n                                following={following.count} />\n              }}\n            </Query>\n          )}\n        </Query>\n      )}\n    </Query>\n  )  \n}\nexport default UserInfoQueries;","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport ProfilePosts from './ProfilePosts'\nimport UserInfoQueries from './UserInfoQueries'\nimport NavBar from './NavBar'\n\nclass Profile extends React.Component {\n  render () {\n    var userId=0\n    if(this.props.match.params.id){\n      userId = this.props.match.params.id\n    }else{\n      userId = localStorage.getItem('userID')\n    }\n\n    return (\n      <div>\n        <NavBar id={userId}/>\n        <Grid container justify='center'>\n          <UserInfoQueries id={userId}/>\n        </Grid>\n        <hr className=\"separator\" />\n        <Grid container justify='center'>\n          <ProfilePosts id={userId} />\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","import { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add';\nimport { Link } from 'react-router-dom'\nimport NavBar from './NavBar'\nimport { Typography } from '@material-ui/core';\nimport swal from '@sweetalert/with-react';\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    marginTop: 20,\n  },\n  typo: {\n    marginTop: 20\n  }\n}))\n\nconst CreatePost = (props) => {  \n  const classes = useStyles()\n  const [content, setContent] = React.useState({content: \"\"})\n  const idCreator = localStorage.getItem('userID');\n  const token = localStorage.getItem('Authorization');\n  const contenido = (props.contenido ? props.contenido : \"\")\n\n  const handleChange = name => event => {\n    setContent({[name]: event.target.value})\n  }\n  const CREATE_POST = gql`\n    mutation {\n      createPost(post: {\n        idCreator: \"${idCreator}\"\n        content: \"${content.content}\"\n      }) {\n        id\n      }\n    }\n  `;\n  \n  const getElementToRender = () => {\n    if(contenido !== \"\"){\n      return  <Typography className={classes.typo} variant='body2' color='textSecondary' component='p'>{contenido}</Typography>\n    } else{\n      return  <Button variant='contained' aria-label='Add to favorites' className={classes.fab} component={Link} to={{pathname: `/addMusicLists`, id: idCreator}}>Get Music List</Button>\n    }\n  }\n\n  return (\n    <div>\n      <NavBar state3=\"navS\" id={idCreator}/>\n      <Grid container justify='center'>\n        <TextField\n            id=\"userInputMultiline\"\n            label=\"Write your post\"\n            multiline\n            rowsMax=\"4\"\n            value={content.content}                     \n            onChange={handleChange('content')}\n            className=\"newPost\"\n            margin=\"normal\"\n            required\n          />\n      </Grid>\n      <Grid container justify='center'>\n        <Mutation mutation={CREATE_POST} \n          context={{\n            headers: {\n              Authorization: token ? `Bearer ${token}` : \"\"\n            }\n          }}\n          onError={\n            (errors)=>{\n              if(errors){\n                return <div alert={swal(\"Wrong creation post!\", \"The post can not be empty\", \"error\")} />\n              }\n            }\n          }\n          onCompleted={\n            (data,errors) => {\n              if(data!==null){\n                swal({\n                  title: \"Posted!\",\n                  text: \"Your post has been created!\",\n                  icon: \"success\",\n                  button: \"Ok!\",\n                })\n                .then((value)=>{\n                  window.location.assign('/home')\n                });\n              }\n            }\n          }>\n          {postMutation => <Fab type=\"button\" disabled={!content.content} className={classes.fab} onClick={postMutation}>\n            <AddIcon /> \n          </Fab>}\n        </Mutation>        \n      </Grid>\n      <Grid container justify='center'>\n        {getElementToRender()}\n      </Grid>\n    </div>\n  )\n}\n\nexport default CreatePost\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardActions from '@material-ui/core/CardActions'\nimport Avatar from '@material-ui/core/Avatar'\nimport { makeStyles } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\nimport swal from '@sweetalert/with-react';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    backgroundColor: red[500]\n  },\n  fab: {\n    margin: 10\n  }\n}))\n\nconst UserCard = (props) => {   \n  const classes = useStyles()\n  const user = props.user\n  const userId = props.userId\n  const disabled = props.isFollowed\n  const otherUser = props.otherUserId\n  const token = localStorage.getItem('Authorization');\n\n  const CREATE_FOLLOW = gql`\n    mutation {\n      createFollow(followerId: \"${userId}\", followingId: \"${otherUser}\"){\n        followerId\n      }\n    }\n  `;\n\n  \n  const DELETE_FOLLOW = gql`\n    mutation {\n      deleteFollow(followerId: \"${userId}\", followingId: \"${otherUser}\") {\n        followerId\n      }\n    }\n  `;\n\n  return (\n    <Grid container justify='center'>\n      <Card className='userStyle'>\n        <CardHeader\n          avatar={\n            <Avatar className={classes.avatar} aria-label='Recipe'>\n              {user[0]}\n            </Avatar>\n          }\n          title={user}\n        />\n        \n\n        <CardActions disableSpacing>\n          <Grid container justify='center'>\n            <Mutation mutation={CREATE_FOLLOW}\n              context={{\n                headers: {\n                  Authorization: token ? `Bearer ${token}` : \"\"\n                }\n              }}\n              onCompleted={\n                (data,errors) => {\n                  if(data!==null){\n                    swal({\n                      title: \"Following!\",\n                      text: `You are now following ${user}!`,\n                      icon: \"success\",\n                      button: \"Ok!\",\n                    })\n                    .then((value)=>{\n                      window.location.reload()\n                    });\n                  }\n                }\n              }>\n                {postMutation => <Button disabled={disabled} variant='contained' className={classes.fab} onClick={postMutation}>\n                  Follow\n              </Button>}\n            </Mutation>\n            <Mutation mutation={DELETE_FOLLOW}\n              context={{\n                headers: {\n                  Authorization: token ? `Bearer ${token}` : \"\"\n                }\n              }}\n              onCompleted={\n                (data,errors) => {\n                  if(data!==null){\n                    swal({\n                      title: \"Unfollow success!\",\n                      text: `You are not now following ${user}!`,\n                      icon: \"success\",\n                      button: \"Ok!\",\n                    })\n                    .then((value)=>{\n                      window.location.reload()\n                    });\n                  }\n                }\n              }>\n                {postMutation => <Button disabled={!disabled} variant='contained' className={classes.fab} onClick={postMutation}>\n                  Unfollow\n              </Button>}\n            </Mutation>\n            <Button variant='contained' component={Link} to={`/profile/${otherUser}`} className={classes.fab}>\n              Profile\n            </Button>\n          </Grid>\n        </CardActions>\n      </Card>\n    </Grid>\n  )\n}\n\nexport default UserCard\n","import React from 'react'\nimport UserCard from './UserCard'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Loading from './Loading'\n\nconst SearchUsers = (props) => {\n  const userId = props.id\n  const token = localStorage.getItem('Authorization');\n  \n  return (\n    <Query\n      context={{\n        headers: {\n          Authorization: token ? `Bearer ${token}` : \"\"\n        }\n      }}\n        query={gql`\n        {\n            userList(userId: \"${userId}\") {\n              otherUsers{\n                name\n                lastName\n                id\n                followsMe\n                iFollow\n              }\n            }\n          }\n        `}\n      >\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />;\n        if (error) return <p>Error :(</p>;\n          return data.userList.otherUsers.map((object) => <UserCard key={object.id} otherUserId={object.id} userId={userId} isFollowed={object.iFollow} user={object.name+\" \"+object.lastName} />)\n      }}\n    </Query>\n  )\n}\n\nexport default SearchUsers\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport SearchUsers from './SearchUsers'\nimport NavBar from './NavBar'\nimport Loading from './Loading'\n\nconst AllUsers = (props) => {\n  \tconst userId = localStorage.getItem('userID');\n\n  \tfunction redireccionar(){\n\t  \twindow.location.href=\"/\";\n\t} \n\n\tif (userId!==null) {\n\t\treturn (\n\t\t    <div>\n\t\t      <NavBar state4=\"navS\" />\n\t\t      <Grid container justify='center'>\n\t\t        <SearchUsers id={userId} />\n\t\t      </Grid>\n\t\t    </div>\n\t\t)\n\t}else{\n\tsetTimeout (redireccionar, 5000);\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Loading />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default AllUsers","import React from 'react'\nimport gql from 'graphql-tag'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Mutation } from 'react-apollo'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom'\nimport { FormControl, FormLabel } from \"react-bootstrap\";\nimport logo from './../eagle.svg'\nimport Loading from './Loading'\nimport swal from '@sweetalert/with-react';\nimport \"./Login.css\";\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    marginTop: 20,\n    marginLeft: 20\n  },\n  typo: {\n    marginTop: 20\n  }\n}));\n\n\nconst Login = (props) => {\n\n  document.body.style = 'background: -webkit-linear-gradient(to left, #F53134, #FFFC52);  /* Chrome 10-25, Safari 5.1-6 */';\n  document.body.style = 'background: #fc4a1a;';\n  document.body.style = 'background: linear-gradient(to left, rgba(245,49,52,1), rgba(255,252,82,1));';\n\n  const classes = useStyles()\n  const [values, setValues] = React.useState({\n    email: \"\",\n    password: \"\",\n  })\n\n  const CREATE_TOKEN_SESSION = gql`\n    mutation {\n      createNewUserSession(user: {\n        email: \"${values.email}\",\n        password: \"${values.password}\"\n      }) \n      {\n        jwt\n        id\n      }\n    }\n  `;\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n  \n  const token = localStorage.getItem('Authorization')\n\n  function redireccionar(){\n    window.location.href=\"/home\";\n  }\n\n  if (token==null) {\n    return (\n      <div className=\"Login\"\n        onKeyPress={event => {\n          if (event.key === \"Enter\") {\n            document.getElementById(\"loginBtn\").click();\n          }\n        }}\n        >\n        <div>\n          <h1>Eagle UN</h1>\n        </div>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Grid container justify='center'>\n          <Grid>\n            <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n              <FormLabel>Email</FormLabel>\n            </Typography>\n            <FormControl\n              id=\"userEmail\"\n              label=\"\"\n              value={values.email}\n              onChange={handleChange('email')}\n              className={classes.textField}\n              margin=\"normal\"\n              placeholder=\"Enter email\"\n              autoFocus=\"autofocus\"\n            />\n          </Grid>\n          <Grid>\n            <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n              <FormLabel>Password</FormLabel>\n            </Typography>\n            <FormControl\n              id=\"userPassword\"\n              label=\"\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange('password')}\n              className={classes.textField}\n              margin=\"normal\"\n              placeholder=\"Password\"\n            />\n          </Grid>\n        </Grid>\n        <Grid container justify='center'>\n          <Mutation mutation={CREATE_TOKEN_SESSION}\n            onError={\n              (errors)=>{\n                if(errors){\n                  return <div alert={swal(\"Wrong login!\", \"Bad credentials\", \"error\")} />\n                }\n              }\n            }\n            onCompleted={\n              (data) => {\n                if(data!==null){\n                  if(data.createNewUserSession.jwt !== \"0\"){\n                    localStorage.setItem(\"Authorization\", data.createNewUserSession.jwt)\n                    localStorage.setItem(\"userID\", data.createNewUserSession.id)\n                    window.location.assign(\"/home\")\n                    window.location.reload()\n                  }\n                }\n              }\n            }\n          >\n            {postMutation => <Button id=\"loginBtn\" variant='contained' aria-label='Add to favorites' className={classes.fab} onClick={postMutation}>\n              Login\n            </Button>}\n          </Mutation>\n          <Button id=\"loginBtn2\" component={Link} to={'/signup'} variant='contained' aria-label='Add to favorites' className={classes.fab} >\n            Sign Up\n          </Button>\n        </Grid>  \n      </div>\n    )\n  }else{\n  setTimeout (redireccionar, 5000);\n    return(\n      <div>\n        <Loading />\n      </div>\n    )\n  }\n}\nexport default Login","import React from 'react'\nimport gql from 'graphql-tag'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { Mutation } from 'react-apollo'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { FormControl, FormLabel } from \"react-bootstrap\";\nimport logo from './../eagle.svg';\nimport Loading from './Loading'\nimport swal from '@sweetalert/with-react';\nimport \"./Signup.css\";\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    marginTop: 20,\n  },\n  typo: {\n    marginTop: 20\n  }\n}))\n\nconst SignUp = (props) => {\n\n  document.body.style = 'background: -webkit-linear-gradient(to left, #F53134, #FFFC52);  /* Chrome 10-25, Safari 5.1-6 */';\n  document.body.style = 'background: #fc4a1a;';\n  document.body.style = 'background: linear-gradient(to left, rgba(245,49,52,1), rgba(255,252,82,1));';\n  \n  const classes = useStyles()\n  const [values, setValues] = React.useState({\n    name: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n  })\n\n  const CREATE_USER = gql`\n    mutation {\n      createUser(user: {\n        name: \"${values.name}\"\n        last_name: \"${values.lastName}\"\n        username: \"${values.username}\"\n        email: \"${values.email}\"\n        password: \"${values.password}\"\n        password_confirmation: \"${values.passwordConfirmation}\"\n      }){\n        id\n      }\n    }\n  `;\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const token = localStorage.getItem('Authorization')\n  \n  function redireccionar(){\n    window.location.href=\"/home\";\n  }\n\n  if (token==null) {\n    return (\n      <div className=\"Signup\" \n        onKeyPress={event => {\n          if (event.key === \"Enter\") {\n            document.getElementById(\"btnSingUp\").click();\n          }\n        }}\n        >\n        <div>\n          <h1>Eagle UN</h1>\n        </div>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Grid container justify='center'>\n          <Grid>\n            <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n              <FormLabel>Name</FormLabel>\n            </Typography>\n            <FormControl\n              id=\"nameUser\"\n              label=\"\"\n              value={values.name}\n              onChange={handleChange('name')}\n              className={classes.textField}\n              margin=\"normal\"\n              placeholder=\"Enter your name\"\n              autoFocus=\"autofocus\"\n            />\n            </Grid>\n            <Grid>\n              <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n                <FormLabel>Last name</FormLabel>\n              </Typography>\n              <FormControl\n                id=\"userLastName\"\n                label=\"\"\n                value={values.lastName}\n                onChange={handleChange('lastName')}\n                className={classes.textField}\n                margin=\"normal\"\n                placeholder=\"Enter your last name\"\n              />\n            </Grid>\n            <Grid>\n              <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n                <FormLabel>User Name</FormLabel>\n              </Typography>\n              <FormControl\n                id=\"userName\"\n                label=\"\"\n                value={values.username}\n                onChange={handleChange('username')}\n                className={classes.textField}\n                margin=\"normal\"\n                placeholder=\"Enter a user name\"\n              />\n            </Grid>\n            <Grid>\n              <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n                <FormLabel>Email</FormLabel>\n              </Typography>\n              <FormControl\n                id=\"userEmail\"\n                label=\"\"\n                value={values.email}\n                onChange={handleChange('email')}\n                className={classes.textField}\n                margin=\"normal\"\n                placeholder=\"Enter a email\"\n              />\n            </Grid>\n            <Grid>\n              <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n                <FormLabel>Password</FormLabel>\n              </Typography>\n              <FormControl\n                id=\"userPassword\"\n                label=\"\"\n                type=\"password\"\n                value={values.password}\n                onChange={handleChange('password')}\n                className={classes.textField}\n                margin=\"normal\"\n                placeholder=\"Enter a password\"\n            />\n            </Grid>\n            <Grid>\n              <Typography className={classes.typo} variant='body2' color='textPrimary' component='p'>\n                <FormLabel>Password Confirmation</FormLabel>\n              </Typography>\n              <FormControl\n                id=\"userPasswordConfirmation\"\n                label=\"\"\n                type=\"password\"\n                value={values.passwordConfirmation}\n                onChange={handleChange('passwordConfirmation')}\n                className={classes.textField}\n                margin=\"normal\"\n                placeholder=\"Confirm your password\"\n              />\n            </Grid>          \n        </Grid>\n        <Grid container justify='center'>\n          <Mutation mutation={CREATE_USER}\n            onError={\n              (errors)=>{\n                if(errors){\n                  return <div alert={swal(\"Wrong sign up!\", \"Bad credentials\", \"error\")} />\n                }\n              }\n            }\n            onCompleted={\n              (data) => {\n                if(data!==null){\n                  swal({\n                    title: \"Sign up completed!\",\n                    text: \"Now you can login!\",\n                    icon: \"success\",\n                    button: \"Ok!\",\n                  })\n                  .then((value)=>{\n                    window.location.assign('/')\n                  });\n                }\n              }\n            }\n          >\n            {postMutation => <Button id=\"btnSingUp\" variant='contained' aria-label='Add to favorites' className={classes.fab} onClick={postMutation}>\n              Sign up\n            </Button>}\n          </Mutation>\n        </Grid>\n      </div>\n    )\n  }else{\n  setTimeout (redireccionar, 5000);\n    return(\n      <div>\n        <Loading />\n      </div>\n    )\n  }\n}\n\nexport default SignUp\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport CreatePost from './CreatePost';\nimport Loading from './Loading'\n\nconst AddMusic = (props) => {\n  const userId = props.location.id  \n  return (\n    <Query\n        query={gql`\n         {\n            getMusicList(id: \"${userId}\"){        \n              url\n              name\n            }\n          }\n        `}\n      >\n      {({ loading, error, data }) => {\n        if (loading) return <Loading />;\n        if (error) return <CreatePost id={userId} contenido=\"You have not created any music list :(\"></CreatePost>;            \n        return <CreatePost id={userId} contenido={`The last list that I created is called ${data.getMusicList.name} you can see its photo here ${data.getMusicList.url}`}></CreatePost>        \n      }}\n    </Query>\n  )\n}\n\nexport default AddMusic\n","import React from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './components/Home'\nimport Notifications from './components/Notifications'\nimport Profile from './components/Profile'\nimport CreatePost from './components/CreatePost'\nimport AllUsers from './components/AllUsers'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport AddMusic from './components/AddMusic'\n\nconst client = new ApolloClient({\n  uri: 'http://35.232.95.82/graphql'\n})\n\nfunction App () {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>          \n          <Route exact path='/' component={Login} />\n          <Route exact path='/signup' component={SignUp} />\n          <Route exact path='/home' component={Home} />\n          <Route exact path='/notifications' component={Notifications} />\n          <Route exact path='/profile' component={Profile} />\n          <Route exact path='/profile/:id' component={Profile} />\n          <Route exact path='/post' component={CreatePost} />\n          <Route exact path='/users' component={AllUsers} />\n          <Route exact path='/addMusicLists/' component={AddMusic} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function(registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function(err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/eagle.7dece5d0.svg\";"],"sourceRoot":""}